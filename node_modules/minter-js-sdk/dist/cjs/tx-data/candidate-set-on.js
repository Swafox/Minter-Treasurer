'use strict';

var minterjsTx = require('minterjs-tx');
var minterjsUtil = require('minterjs-util');
var utils = require('../utils.js');

/**
 * @param {string} publicKey
 * @constructor
 */

function SetCandidateOnTxData(_ref) {
  var publicKey = _ref.publicKey;
  utils.validatePublicKey(publicKey, 'publicKey');
  this.publicKey = publicKey;
  this.txData = new minterjsTx.TxDataSetCandidateOn({
    publicKey: minterjsUtil.toBuffer(publicKey)
  });
  utils.proxyNestedTxData(this);
}
/**
 * @param {Buffer|string} publicKey
 * @return {SetCandidateOnTxData}
 */

SetCandidateOnTxData.fromBufferFields = function fromBufferFields(_ref2) {
  var publicKey = _ref2.publicKey;
  return new SetCandidateOnTxData({
    publicKey: minterjsUtil.publicToString(publicKey)
  });
};
/**
 * @param {Buffer|string} data
 * @return {SetCandidateOnTxData}
 */


SetCandidateOnTxData.fromRlp = function fromRlp(data) {
  return SetCandidateOnTxData.fromBufferFields(new minterjsTx.TxDataSetCandidateOn(data));
};

module.exports = SetCandidateOnTxData;
