'use strict';

var minterjsTx = require('minterjs-tx');
var minterjsUtil = require('minterjs-util');
var utils = require('../utils.js');

/**
 * @param {string} symbol
 * @param {string} newOwner
 * @constructor
 */

function EditTickerOwnerTxData(_ref) {
  var symbol = _ref.symbol,
      newOwner = _ref.newOwner;
  utils.validateTicker(symbol, 'symbol');
  utils.validateAddress(newOwner, 'newOwner');
  this.symbol = symbol;
  this.newOwner = newOwner;
  this.txData = new minterjsTx.TxDataEditTickerOwner({
    symbol: minterjsUtil.coinToBuffer(symbol),
    newOwner: minterjsUtil.toBuffer(newOwner)
  });
  utils.proxyNestedTxData(this);
}
/**
 *
 * @param {Buffer|string} symbol
 * @param {Buffer|string} newOwner
 * @return {EditTickerOwnerTxData}
 */

EditTickerOwnerTxData.fromBufferFields = function fromBufferFields(_ref2) {
  var symbol = _ref2.symbol,
      newOwner = _ref2.newOwner;
  return new EditTickerOwnerTxData({
    symbol: minterjsUtil.bufferToCoin(minterjsUtil.toBuffer(symbol)),
    newOwner: minterjsUtil.addressToString(newOwner)
  });
};
/**
 * @param {Buffer|string} data
 * @return {EditTickerOwnerTxData}
 */


EditTickerOwnerTxData.fromRlp = function fromRlp(data) {
  return EditTickerOwnerTxData.fromBufferFields(new minterjsTx.TxDataEditTickerOwner(data));
};

module.exports = EditTickerOwnerTxData;
