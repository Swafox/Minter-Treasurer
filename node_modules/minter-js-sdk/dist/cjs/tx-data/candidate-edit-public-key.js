'use strict';

var minterjsTx = require('minterjs-tx');
var minterjsUtil = require('minterjs-util');
var utils = require('../utils.js');

/**
 * @param {string} publicKey
 * @param {string} newPublicKey
 * @constructor
 */

function EditCandidatePublicKeyTxData(_ref) {
  var publicKey = _ref.publicKey,
      newPublicKey = _ref.newPublicKey;
  utils.validatePublicKey(publicKey, 'publicKey');
  utils.validatePublicKey(newPublicKey, 'newPublicKey');
  this.publicKey = publicKey;
  this.newPublicKey = newPublicKey;
  this.txData = new minterjsTx.TxDataEditCandidatePublicKey({
    publicKey: minterjsUtil.toBuffer(publicKey),
    newPublicKey: minterjsUtil.toBuffer(newPublicKey)
  });
  utils.proxyNestedTxData(this);
}
/**
 * @param {Buffer|string} publicKey
 * @param {Buffer|string} newPublicKey
 * @return {EditCandidatePublicKeyTxData}
 */

EditCandidatePublicKeyTxData.fromBufferFields = function fromBufferFields(_ref2) {
  var publicKey = _ref2.publicKey,
      newPublicKey = _ref2.newPublicKey;
  return new EditCandidatePublicKeyTxData({
    publicKey: minterjsUtil.publicToString(publicKey),
    newPublicKey: minterjsUtil.publicToString(newPublicKey)
  });
};
/**
 * @param {Buffer|string} data
 * @return {EditCandidatePublicKeyTxData}
 */


EditCandidatePublicKeyTxData.fromRlp = function fromRlp(data) {
  return EditCandidatePublicKeyTxData.fromBufferFields(new minterjsTx.TxDataEditCandidatePublicKey(data));
};

module.exports = EditCandidatePublicKeyTxData;
