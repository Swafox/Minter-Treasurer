'use strict';

var minterjsTx = require('minterjs-tx');
var minterjsUtil = require('minterjs-util');
var utils = require('../utils.js');

/**
 *
 * @param {number|string} price
 * @constructor
 */

function PriceVoteTxData(_ref) {
  var price = _ref.price;
  utils.validateUint(price, 'price');
  this.price = price;
  this.txData = new minterjsTx.TxDataPriceVote({
    price: utils.integerToHexString(price)
  });
  utils.proxyNestedTxData(this);
}
/**
 * @param {Buffer|string|number} price
 * @return {PriceVoteTxData}
 */

PriceVoteTxData.fromBufferFields = function fromBufferFields(_ref2) {
  var price = _ref2.price;
  return new PriceVoteTxData({
    price: utils.bufferToInteger(minterjsUtil.toBuffer(price))
  });
};
/**
 * @param {Buffer|string} data
 * @return {PriceVoteTxData}
 */


PriceVoteTxData.fromRlp = function fromRlp(data) {
  return PriceVoteTxData.fromBufferFields(new minterjsTx.TxDataPriceVote(data));
};

module.exports = PriceVoteTxData;
