'use strict';

var variables = require('../variables.js');

/**
 * @param {MinterApiInstance} apiInstance
 * @return {function(*): (Promise<number>)}
 */

function GetNonce(apiInstance) {
  /**
   * Get nonce for new transaction: last transaction number + 1
   * @param {string} address
   * @param {import('axios').AxiosRequestConfig} [axiosOptions]
   * @return {Promise<number>}
   */
  return function getNonce(address, axiosOptions) {
    var nonceUrl = apiInstance.defaults.apiType === variables.API_TYPE_GATE ? "nonce/".concat(address) : "address/".concat(address);
    return apiInstance.get(nonceUrl, axiosOptions).then(function (response) {
      var resData = response.data;
      var nonce = apiInstance.defaults.apiType === variables.API_TYPE_GATE ? resData.nonce : resData.transaction_count;
      var newNonce = Number(nonce) + 1;

      if (Number.isNaN(newNonce)) {
        // eslint-disable-next-line unicorn/prefer-type-error
        throw new Error("Can't get nonce, API returns '".concat(nonce, "'"));
      }

      return newNonce;
    });
  };
}

module.exports = GetNonce;
