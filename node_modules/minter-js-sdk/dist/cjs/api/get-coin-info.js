'use strict';

var utils = require('../utils.js');

/**
 * @param {MinterApiInstance} apiInstance
 * @return {function((string|number), AxiosRequestConfig=): (Promise<CoinInfo>)}
 */

function GetCoinInfo(apiInstance) {
  return getCoinInfo;
  /**
   * Get nonce for new transaction: last transaction number + 1
   * @param {string|number} coin
   * @param {import('axios').AxiosRequestConfig} [axiosOptions]
   * @return {Promise<CoinInfo>}
   */

  function getCoinInfo(coin, axiosOptions) {
    var coinInfoPromise;

    if (utils.isCoinId(coin)) {
      coinInfoPromise = apiInstance.get("coin_info_by_id/".concat(coin), axiosOptions);
    } else if (utils.isCoinSymbol(coin)) {
      coinInfoPromise = apiInstance.get("coin_info/".concat(coin), axiosOptions);
    } else {
      return Promise.reject(new Error('Invalid coin'));
    }

    return coinInfoPromise.then(function (response) {
      response.data.id = Number(response.data.id);
      return response.data;
    });
  }
}
/**
 * @typedef {Object} CoinInfo
 * @property {number|string} id
 * @property {string} name
 * @property {string} symbol
 * @property {number|string} volume
 * @property {number|string} crr
 * @property {number|string} reserve_balance
 * @property {number|string} max_supply
 * @property {string|null} owner_address
 */

module.exports = GetCoinInfo;
