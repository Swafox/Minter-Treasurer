'use strict';

/**
 * @param {MinterApiInstance} apiInstance
 * @return {Function<Promise>}
 */
function PostSignedTx(apiInstance) {
  /**
   * @param {string|Buffer} signedTx
   * @param {import('axios').AxiosRequestConfig} [axiosOptions]
   * @return {Promise<NodeTransaction|{hash: string}>}
   */
  return function postSignedTx(signedTx, axiosOptions) {
    if (Buffer.isBuffer(signedTx)) {
      signedTx = "0x".concat(signedTx.toString('hex'));
    }

    return apiInstance.post('send_transaction', {
      tx: signedTx
    }, axiosOptions).then(function (response) {
      var _resData$transaction;

      var resData = response.data;

      if (((_resData$transaction = resData.transaction) === null || _resData$transaction === void 0 ? void 0 : _resData$transaction.code) > 0) {
        throw new Error("Transaction included in the block with error code ".concat(resData.transaction.code, ": ").concat(resData.transaction.log));
      } // @TODO check error code


      return resData.transaction || {
        hash: resData.hash
      };
    });
  };
}
/**
 * @typedef NodeTransaction
 * @property {string} hash
 * @property {string} raw_tx
 * @property {string} height
 * @property {string} from
 * @property {string} nonce
 * @property {string} gas
 * @property {number} gas_price
 * @property {string} gas_coin
 * @property {number} type
 * @property {TxData} data
 * @property {string} payload
 * @property {Object} tags
 */

module.exports = PostSignedTx;
