'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var minterjsUtil = require('minterjs-util');
var variables = require('./variables.js');
var minter = require('./minter.js');
var index = require('./api/index.js');
var postTx = require('./api/post-tx.js');
var postSignedTx = require('./api/post-signed-tx.js');
var getNonce = require('./api/get-nonce.js');
var getCoinInfo = require('./api/get-coin-info.js');
var getMinGasPrice = require('./api/get-min-gas-price.js');
var estimateCoinSell = require('./api/estimate-coin-sell.js');
var estimateCoinSellAll = require('./api/estimate-coin-sell-all.js');
var estimateCoinBuy = require('./api/estimate-coin-buy.js');
var estimateTxCommission = require('./api/estimate-tx-commission.js');
var replaceCoin = require('./api/replace-coin.js');
var check = require('./check.js');
var link = require('./link.js');
var tx = require('./tx.js');
var index$1 = require('./tx-data/index.js');
var redeemCheck = require('./tx-data/redeem-check.js');
var send = require('./tx-data/send.js');
var multisend = require('./tx-data/multisend.js');
var convertSell = require('./tx-data/convert-sell.js');
var convertSellAll = require('./tx-data/convert-sell-all.js');
var convertBuy = require('./tx-data/convert-buy.js');
var candidacyDeclare = require('./tx-data/candidacy-declare.js');
var candidateSetOn = require('./tx-data/candidate-set-on.js');
var candidateEdit = require('./tx-data/candidate-edit.js');
var candidateEditPublicKey = require('./tx-data/candidate-edit-public-key.js');
var stakeDelegate = require('./tx-data/stake-delegate.js');
var stakeUnbond = require('./tx-data/stake-unbond.js');
var createCoin = require('./tx-data/create-coin.js');
var recreateCoin = require('./tx-data/recreate-coin.js');
var editTickerOwner = require('./tx-data/edit-ticker-owner.js');
var createMultisig = require('./tx-data/create-multisig.js');
var editMultisig = require('./tx-data/edit-multisig.js');
var voteHaltBlock = require('./tx-data/vote-halt-block.js');
var votePrice = require('./tx-data/vote-price.js');
var poolAddLiquidity = require('./tx-data/pool-add-liquidity.js');
var poolRemoveLiquidity = require('./tx-data/pool-remove-liquidity.js');
var poolBuy = require('./tx-data/pool-buy.js');
var poolSell = require('./tx-data/pool-sell.js');
var poolSellAll = require('./tx-data/pool-sell-all.js');
var candidateEditCommission = require('./tx-data/candidate-edit-commission.js');
var stakeMove = require('./tx-data/stake-move.js');
var tokenMint = require('./tx-data/token-mint.js');
var tokenBurn = require('./tx-data/token-burn.js');
var tokenCreate = require('./tx-data/token-create.js');
var tokenRecreate = require('./tx-data/token-recreate.js');
var voteCommission = require('./tx-data/vote-commission.js');
var voteUpdate = require('./tx-data/vote-update.js');
var poolCreate = require('./tx-data/pool-create.js');
var limitOrderAdd = require('./tx-data/limit-order-add.js');
var limitOrderRemove = require('./tx-data/limit-order-remove.js');



Object.defineProperty(exports, 'TX_TYPE', {
	enumerable: true,
	get: function () { return minterjsUtil.TX_TYPE; }
});
exports.API_TYPE_GATE = variables.API_TYPE_GATE;
exports.API_TYPE_NODE = variables.API_TYPE_NODE;
exports.ESTIMATE_SWAP_TYPE = variables.ESTIMATE_SWAP_TYPE;
exports.Minter = minter;
exports["default"] = minter;
exports.MinterApi = index;
exports.EnsureNonce = postTx.EnsureNonce;
exports.PostTx = postTx["default"];
exports.PostSignedTx = postSignedTx;
exports.GetNonce = getNonce;
exports.GetCoinInfo = getCoinInfo;
exports.GetMinGasPrice = getMinGasPrice;
exports.EstimateCoinSell = estimateCoinSell;
exports.EstimateCoinSellAll = estimateCoinSellAll;
exports.EstimateCoinBuy = estimateCoinBuy;
exports.EstimateTxCommission = estimateTxCommission;
exports.GetCoinId = replaceCoin.GetCoinId;
exports.GetCoinSymbol = replaceCoin.GetCoinSymbol;
exports.ReplaceCoinId = replaceCoin.ReplaceCoinId;
exports.ReplaceCoinIdByPath = replaceCoin.ReplaceCoinIdByPath;
exports.ReplaceCoinSymbol = replaceCoin.ReplaceCoinSymbol;
exports.ReplaceCoinSymbolByPath = replaceCoin.ReplaceCoinSymbolByPath;
exports.decodeCheck = check.decodeCheck;
exports.getGasCoinFromCheck = check.getGasCoinFromCheck;
exports.issueCheck = check["default"];
exports.decodeLink = link.decodeLink;
exports.prepareLink = link.prepareLink;
exports.decodeTx = tx.decodeTx;
exports.makeSignature = tx.makeSignature;
exports.prepareSignedTx = tx["default"];
exports.prepareTx = tx.prepareTx;
exports.getTxData = index$1["default"];
exports.RedeemCheckTxData = redeemCheck;
exports.SendTxData = send;
exports.MultisendTxData = multisend;
exports.SellTxData = convertSell;
exports.SellAllTxData = convertSellAll;
exports.BuyTxData = convertBuy;
exports.DeclareCandidacyTxData = candidacyDeclare;
exports.SetCandidateOffTxData = candidateSetOn;
exports.SetCandidateOnTxData = candidateSetOn;
exports.EditCandidateTxData = candidateEdit;
exports.EditCandidatePublicKeyTxData = candidateEditPublicKey;
exports.DelegateTxData = stakeDelegate;
exports.UnbondTxData = stakeUnbond;
exports.CreateCoinTxData = createCoin;
exports.RecreateCoinTxData = recreateCoin;
exports.EditTickerOwnerTxData = editTickerOwner;
exports.CreateMultisigTxData = createMultisig;
exports.EditMultisigTxData = editMultisig;
exports.SetHaltBlockTxData = voteHaltBlock;
exports.PriceVoteTxData = votePrice;
exports.AddLiquidityTxData = poolAddLiquidity;
exports.RemoveLiquidityTxData = poolRemoveLiquidity;
exports.BuyPoolTxData = poolBuy;
exports.SellPoolTxData = poolSell;
exports.SellAllPoolTxData = poolSellAll;
exports.EditCandidateCommissionTxData = candidateEditCommission;
exports.MoveStakeTxData = stakeMove;
exports.MintTokenTxData = tokenMint;
exports.BurnTokenTxData = tokenBurn;
exports.CreateTokenTxData = tokenCreate;
exports.RecreateTokenTxData = tokenRecreate;
exports.VoteCommissionTxData = voteCommission;
exports.VoteUpdateTxData = voteUpdate;
exports.CreatePoolTxData = poolCreate;
exports.AddLimitOrderTxData = limitOrderAdd;
exports.RemoveLimitOrderTxData = limitOrderRemove;
